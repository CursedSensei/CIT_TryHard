#include <iostream>
#include <Windows.h>
#include "Clipboard.h"
using namespace std;

DWORD WINAPI xmain(LPVOID args) {
	HWND *ccHwnd = (HWND*)args;
	bool silenceTab = true, silenceTrail = true;

	int input = 0;
	while (input != 1) {
		cout << "CCrune Start Menu\n\n" << endl;
		cout << "1: Start\n2: Toggle Tab [" << (silenceTab ? "False" : "True") << "]\t\t (Tabs are usually generated by codechum. Keep this False to not input tabs)" << endl;
		cout << "3: Toggle Semicolon [" << (silenceTrail ? "False" : "True") << "]\t (Semicolon are usually generated by codechum. Keep this False to not input semicolons)\n\nOption: ";
		cin >> input;

		switch (input) {
		case 2:
			silenceTab = !silenceTab;
			break;
		case 3:
			silenceTrail = !silenceTrail;
			break;
		}
		system("cls");
	}

	initClipboard(silenceTab, false, *ccHwnd);

	input = 0;
	while (input != 1) {
		cout << "CCrune Controls\nWARNING: DEFAULT COPY WILL BE DISABLED. U may pause using the control below to be able to use it.\n\nCopy: \t\t\t\tCtrl-C\nPaste: \t\t\t\tCtrl-V\nCancel Paste: \t\t\tEnd\nToggle Tab: \t\t\tCtrl-;\nToggle Semicolon: \t\tCtrl-,\nPause/Unpause Clipboard: \tCtrl-.\n\n" << endl;
		cout << "1: Exit\n\nOption: ";
		cin >> input;

		system("cls");
	}

	PostMessageA(*ccHwnd, WM_CLOSE, NULL, NULL);
	HeapFree(GetProcessHeap(), 0, args);

	return 0;
}