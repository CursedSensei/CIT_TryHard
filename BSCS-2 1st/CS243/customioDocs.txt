|[print] Print String with colors
|@Param
|SI - null terminated string with color code [1, length, RGB]
|--------------------------------------------------------


|[printChr] Print character
|@Param
|DL - Character code
|--------------------------------------------------------


|[printColor] Print filling the string with color code
|@Param
|SI - Pointer to string
|BL - Color code
|--------------------------------------------------------


|[strlen] Get length of string
|@Param
|SI - Pointer to string
|
|@Return
|AX - length of string
|NOTE: All str functions except this one does not support colors in string
|--------------------------------------------------------


|[strcmp] Check if both strings are equal
|@Param
|SI - Pointer to first string
|DI - Pointer to second string
|@Return
|CF - 1 if equal else 0
|--------------------------------------------------------


|[strcat] Concatenate two strings
|@Param
|SI - Pointer to string to be concatenated
|DI - Pointer to string to concatenate
|NOTE: C-Style - strcat(SI, DI);
|--------------------------------------------------------


|[strcpy] Copy String to another string buffer
|@Param
|SI - Pointer to source string
|DI - Pointer to destination string buffer
|--------------------------------------------------------


|[memcpy] Copy memory from another address to another
|@Param
|SI - Pointer to source
|DI - Pointer to destination
|CX - Length of bytes to copy
|--------------------------------------------------------


|[memset] Set all bytes of a memory address to specified byte value
|@Param
|SI - Pointer to set value
|BL - Byte value
|CX - Length of bytes to set
|--------------------------------------------------------


|[printColorCenter] Print centered filling the string with color code
|@Param
|SI - Pointer to string
|BL - Color code
|CX - length of the space to print (80 for screen)
|--------------------------------------------------------


|[printCenter] Print string center to screen
|@Param
|SI - Pointer to string to print
|CX - length of the space to print (80 for screen)
|--------------------------------------------------------


|[printSpace] Print space
|@Param
|CX - number of spaces to print
|--------------------------------------------------------


|[fillSpecifiedChr] Print CX number of character
|@Param
|DL - Character code
|CX - number of characters to print
|--------------------------------------------------------


|[fillChr] Print line with specified character
|@Param
|DL - Character code
|--------------------------------------------------------


|[fillSpace] Print line with spaces
|--------------------------------------------------------


|[setColor] Set color to length cx
|@Param
|CX - Length of color
|BL - Color code
|--------------------------------------------------------


|[fillColor] Fill current line with color
|@Param
|BL - Color code
|--------------------------------------------------------


|[printNum] Print 16-bit Integer (can only take up to 16 bits values with AX as input/parameter)
|@Param
|AX - Integer to print
|--------------------------------------------------------


|[formatNum] Parse number to string
|@Param
|AX - Number to format
|SI - String buffer to output
|--------------------------------------------------------


|[isOdd] 16-bits isOdd function with AX as input/paramter
|@Param
|AX - 16-bit Number to evaluate
|--------------------------------------------------------


|[getKey] Get key code pressed by the keyboard
|@Return
|AL - Key code of key pressed
|--------------------------------------------------------


|[fopen] Open existing file (Write mode will overwrite file)
|@Param
|SI - File Name (null-terminated)
|BL - File access (0 - read, 1 - write)
|@Return
|BX - File Handle (0 if error)
|--------------------------------------------------------


|[fclose] Close a file handle
|@Param
|BX - File Handle
|--------------------------------------------------------


|[fwrite] Write to file
|@Param
|SI - Data to write
|CX - Length of data
|BX - File Handle
|--------------------------------------------------------


|[fget] Read character from file
|@Param
|BX - File Handle
|
|@Return
|AL - Character
|--------------------------------------------------------


|[fread] Read till null byte is encountered
|@Param
|BX - File Handle
|@Return
|DI - Destination of data
|--------------------------------------------------------


|[fremove] Delete file
|@Param
|SI - File Name
|--------------------------------------------------------


|[nwln] Newline Macro
|--------------------------------------------------------


|[cls] Clear Screen
|--------------------------------------------------------


